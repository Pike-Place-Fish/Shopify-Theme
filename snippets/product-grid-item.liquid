<!-- /snippets/product-grid-item.liquid -->
{% comment %}

  This snippet is used to showcase each product during the loop,
  'for product in collection.products' in collection.liquid.

  A liquid variable (grid_item_width) is set just before the this
  snippet is included to change the size of the container.
  Once the variable is set on a page, all future instances of this
  snippet will use that width. Overwrite the variable to adjust this.

  Example
    - assign grid_item_width = 'large--one-quarter medium--one-half'

{% endcomment %}

{% comment %}
  ### NOTE KLT062716: Beeketing Boost Sales Product Price Snippet
  - http://bit.ly/1TB8dYB
  - https://youtu.be/nxc_-VXavt8?t=2m11s
  - Variables replacement:
    - product.price = scn_product_min
    - product.price_min = scn_product_min
    - product.price_varies = scn_price_varies
    - {{ product | json }} = scnProduct({{ product | json }})
    - product.selected_or_first_available_variant = scn_first_product_variant
{% endcomment %}
{% include 'scn-product-price' with product %}

{% comment %}
  Set the default grid_item_width if no variable is set
{% endcomment %}
{% unless grid_item_width %}
  {% assign grid_item_width = 'large--one-quarter medium--one-third medium-down--one-half' %}
{% endunless %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > scn_product_min %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

{% comment %}
  Assign product variable for unit price / label snippet
{% endcomment %}
{% assign product_object = product %}

<div class="grid__item {{ grid_item_width }} product-item">

  {% comment %}
    Link to your product with the 'within: collection' filter for the link to be aware of the collection.
    This allows you to create collection-based navigation on the product page.

    Results of using 'within: collection':
    - Instead of a URL with /products/product-handle
      you would get /collections/collection-handle/products/product-handle

    For more info on navigation within a collection
      - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

  {% endcomment %}

  <a href="{{ product.url | within: collection }}" class="grid__image">

    <div class="product">

      <div class="product-image">
        <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
      </div>

      <div class="product-metadata">

        <p class="h5">{{ product.title }}</p>
        <p class="price">
          {% comment %}
            You can show a leading 'from' or 'up to' by checking 'product.price_varies'
            if your variants have different prices.
          {% endcomment %}
          {% if on_sale %}
            {% if scn_price_varies %}
              {% assign sale_price = scn_product_min | money %}
              {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
            {% else %}
              <strong>{{ 'products.product.on_sale' | t }}</strong>
              {{ scn_product_min | money }}
            {% endif %}
          {% else %}

            {% if scn_price_varies %}
              {% if product.metafields.priceUnit.pricePerPound %}
                {% assign unit_price = product.metafields.priceUnit.pricePerPound | times: 100 | money %}
              {% else %}
                {% assign unit_price = scn_product_min | money %}
                {% comment %}
                  {% assign price = scn_product_min | money %}
                  {{ 'products.general.from_text_html' | t: price: price }}
                {% endcomment %}
              {% endif %}
            {% else %}
              {% assign unit_price = scn_product_min | money %}
            {% endif %}

            {% include 'product-unit-price-label' with product_object, unit_price %}

          {% endif %}
          {% if sold_out %}
            <br><strong>{{ 'products.product.sold_out' | t }}</strong>
          {% endif %}
          {% if on_sale %}
            <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
            <br><s>{{ product.compare_at_price | money }}</s>
          {% endif %}
        </p>

      </div>

    </div>

  </a>

</div>
