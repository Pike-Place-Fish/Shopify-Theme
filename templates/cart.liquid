<!-- /templates/cart.liquid -->
{% comment %}

  For info on test orders:
    - General http://docs.shopify.com/manual/your-store/orders/test-orders
    - Shopify Payments - http://docs.shopify.com/manual/more/shopify-payments/testing-shopify-payments

{% endcomment %}

{% if cart.item_count > 0 %}

  <h1 class="visually-hidden">{{ 'cart.general.title' | t }}</h1>
  <form action="/cart" method="post" novalidate class="cart table-wrap">
    <table class="cart-table full table--responsive">
      <thead class="cart__row cart__header-labels">
        <th colspan="2" class="text-left">{{ 'cart.label.product' | t }}</th>
        <th class="text-right">{{ 'cart.label.price' | t }}</th>
        <th class="text-right">{{ 'cart.label.quantity' | t }}</th>
        <th class="text-right">{{ 'cart.label.total' | t }}</th>
      </thead>
      <tbody>
        {% for item in cart.items %}
          <tr class="cart__row table__section">
            <td data-label="{{ 'customer.order.product' | t }}" class="thumbnail">

              <a href="{{ item.url | within: collections.all }}" class="cart__image">
                {% comment %}
                  More image size options at:
                    - http://docs.shopify.com/themes/filters/product-img-url
                {% endcomment %}
                <img src="{{ item | img_url: 'medium' }}" alt="{{ item.title | escape }}">
              </a>

            </td>
            <td class="details">

              <!-- Product Name (and vendor) -->
              <div class="title">
                <a href="{{ item.url }}" class="h4">
                  <span>{{ item.product.title }}</span>
                </a>

                {% if settings.cart_vendor_enable %}
                  <p class="vendor">{{ item.vendor }}</p>
                {% endif %}
              </div>
              <!-- /Product Name (and vendor) -->

              <!-- Product Specs (weight, instructions) -->
              <ul class="specifications">

                <!-- Variants -->
                {% unless item.variant.title contains 'Default' %}
                  <li class="variant">{{ item.variant.title }}</li>
                {% endunless %}
                <!-- /Variants -->

                <!-- Custom Properties -->
                {% comment %}
                  Optional, loop through custom product line items if available

                  For more info on line item properties, visit:
                    - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization

                  ### NOTE KLT061616: Merged recommended InfiniteOptions display with the below/pre-existing Timber implementation
                {% endcomment %}
                {% assign property_size = item.properties | size %}
                {% assign hidden_properties = '_shipping_restriction,_shipping_category,_delivery_date,_delivery_day,_poundsPerPackage,_shipAlone,_useLargeContainer,_isPerishable,_includesShipping' | split: ',' %}
                {% if property_size > 0 %}
                  {% for p in item.properties %}
                    {% unless (p.last == blank or hidden_properties contains p.first) %}

                      <li class="property">
                        {% comment %}
                          {% if p.first contains 'cuttingInstructions' %}
                            {{ 'cart.general.item_cutting_instructions' | t }}:
                          {% elsif p.first contains 'specialInstructions' %}
                            {{ 'cart.general.item_special_instructions' | t }}:
                          {% else %}
                            {{ p.first }}:
                          {% endif %}
                        {% endcomment %}

                        {% comment %}
                          Check if there was an uploaded file associated
                        {% endcomment %}
                        {% if p.last contains '/uploads/' %}
                          <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                        {% else %}
                          <!-- {{ p.first }} - -->{{ p.last }}
                        {% endif %}

                      </li>
                    {% endunless %}
                  {% endfor %}
                {% endif %}

              </ul>
              <!-- /Product Specs (weight, instructions) -->

              <!-- Product Actions (delete) -->
              <div class="actions">
                <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="cart__remove">
                  <small>{{ 'cart.general.remove' | t }}</small>
                </a>
              </div>
              <!-- /Product Actions (delete) -->

            </td>
            <td data-label="{{ 'cart.label.price' | t }}" class="text-right price">
              <span class="h3 price">
                {{ item.price | money }}
              </span>
            </td>
            <td data-label="{{ 'cart.label.quantity' | t }}" class="text-right quantity">
              <input type="number" name="updates[]" id="updates_{{ item.id }}" value="{{ item.quantity }}" min="0">
            </td>
            <td data-label="{{ 'cart.label.total' | t }}" class="text-right total">
              {% if item.original_line_price != item.line_price %}
                <span class="cart-item__original-price"><s>{{ item.original_line_price | money }}</s></span>
              {% endif %}
              <span class="h3 price">
                {{ item.line_price | money }}
              </span>
              {% for discount in item.discounts %}
                <span class="cart-item__discount">{{ discount.title }}</span>
              {% endfor %}
            </td>
          </tr>
        {% endfor %}

        <tr class="cart__row table__section">
          <td colspan="5" class="summary">

            <div class="grid cart__row">
              {% if settings.cart_notes_enable %}
                <div class="grid__item two-thirds small--one-whole hide">
                  <label for="CartSpecialInstructions">{{ 'cart.general.note' | t }}</label>
                  <textarea name="note" class="input-full" id="CartSpecialInstructions">{{ cart.note }}</textarea>
                </div>
              {% endif %}

              <div class="grid__item medium--one-half medium--show medium-down--hide">

                <!-- Shipping Weight Note -->
                {% comment %}
                  ### NOTE KLT062216: Assign total cart weight to variable with unit prior to using in interpolation
                {% endcomment %}
                {% assign cart_weight = cart.total_weight | weight_with_unit %}
                <h3 class="order-weight-heading">{{ 'cart.general.order_weight' | t: total_weight: cart_weight }}</h3>
                <p class="order-weight-disclaimer">{{ 'cart.general.shipping_disclaimer' | t }}</p>
                <!-- /Shipping Weight Note -->

              </div>
              <div class="grid__item text-right{% if settings.cart_notes_enable %} small--one-half{% endif %}">
                <!-- Subtotal and Shipping/Tax Note -->
                <p>
                  <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}: </span>
                  <span class="h4 cart__subtotal">{{ cart.total_price | money }}</span>
                </p>
                {% if cart.total_discounts > 0 %}
                  {% assign savings = cart.total_discounts | money %}
                  <p><span class="cart-subtotal__savings"><em>{{ 'cart.general.savings_html' | t: price: savings }}</em></span></p>
                {% endif %}
                <p class="shipping-note"><em>{{ 'cart.general.shipping_at_checkout' | t }}</em></p>
                <!-- /Subtotal and Shipping/Tax Note -->
              </div>
              <div class="grid__item medium--hide medium-down--show medium-down--text-right">

                <!-- Shipping Weight Note -->
                {% comment %}
                  ### NOTE KLT062216: Assign total cart weight to variable with unit prior to using in interpolation
                {% endcomment %}
                {% assign cart_weight = cart.total_weight | weight_with_unit %}
                <h3 class="order-weight-heading">{{ 'cart.general.order_weight' | t: total_weight: cart_weight }}</h3>
                <p class="order-weight-disclaimer">{{ 'cart.general.shipping_disclaimer' | t }}</p>
                <!-- /Shipping Weight Note -->

              </div>

              <div class="grid__item spacer one-half medium-down--hide">&nbsp;</div>
              <div class="grid__item medium--text-right medium--one-half medium-down--text-right">
                <!-- Delivery Date Selection -->
                {% comment %}
                  ### NOTE KLT062016: jQuery UI implementation for shipping date picker - Autotag Delivery Date app should, in
                                      theory, automatically hook into the date picker once activated.
                {% endcomment %}
                <div class="delivery-date">
                  <label for="date">{{ settings.heading_delivery_date }}</label>
                  <input type="text" id="delivery_date" name="attributes[date]" value="{{ cart.attributes.date }}" size="10" required />
                  <input type="hidden" id="delivery_day" name="delivery_day" />
                  <div class="day-warning"><small>{{ settings.warning_delivery_date_limited_friday }}</small></div>
                </div>
                <!-- /Delivery Date Selection -->
              </div>

              <div class="grid__item medium--one-half medium-down--text-right">
                {% comment %}
                  ### NOTE KLT090116: Added checkout button for display just on mobile
                {% endcomment %}
                <div class="medium--hide medium-down--text-right btn-container">
                  <!-- Checkout Button -->
                  <input type="submit" id="CheckoutButtonMobile" name="checkout" class="btn" value="{{ 'cart.general.checkout' | t }}">
                </div>
                <!-- Keep Shopping Button -->
                {% comment %}
                  ### TODO KLT061516: There is currently no resource corresponding to this label.
                {% endcomment %}
                <a href="/collections/all" class="btn--secondary">Keep Shopping</a>
              </div>
              <div class="grid__item medium--text-right medium--one-half medium-down--text-right">
                <!-- Update Cart Button -->
                <input type="submit" name="update" class="btn--secondary update-cart" value="{{ 'cart.general.update' | t }}">
                <div class="medium-down--hide btn-container">
                  <!-- Checkout Button -->
                  <input type="submit" id="CheckoutButton" name="checkout" class="btn" value="{{ 'cart.general.checkout' | t }}">
                </div>
              </div>

            </div>

          </td>
        </tr>

      </tbody>
    </table>
  </form>
{% else %}
  {% comment %}
    The cart is empty
  {% endcomment %}
  <h2>{{ 'cart.general.title' | t }}</h2>
  <p>{{ 'cart.general.empty' | t }}</p>
  <p>{{ 'cart.general.continue_browsing_html' | t }}</p>
{% endif %}


<script>
  $(function() {

    /*
     * Instantiate CartJS
     */
    CartJS.init({{ cart | json }}, {
      "dataAPI": false,
      "requestBodyClass": "loading"
    });

    /**
     * Delivery date selection functionality - datepicker and business rules for Friday and weekend shipping
     * ### NOTE 071816: Added holiday blackouts based on
     * https://www.ups.com/content/us/en/resources/ship/imp_exp/operation.html
     */
    // First clear any previously selected date
    $('#delivery_date').val('');
    // Instantiate date picker
    $('#delivery_date').datepicker({
      minDate                   : '+1d',
      maxDate                   : '+6m',
      defaultDate               : '+1d',
      dateFormat                : 'mm/dd/yy',
      altField                  : '#delivery_day',
      altFormat                 : 'DD',
      beforeShowDay: function(date) {
        var
          today                 = new Date(),
          dayOfWeek             = date.getDay(),
          dateString            = jQuery.datepicker.formatDate('yy-mm-dd', date),
          // Exclude US public holidays
          holidays              = ['2016-01-01','2016-01-02','2016-05-30','2016-05-31','2016-07-04','2016-07-05','2016-09-05','2016-09-06','2016-11-24','2016-11-25','2016-12-24','2016-12-25','2016-12-26','2016-12-31','2017-01-01','2017-01-02'],
          warningTooltip        = '{{ settings.warning_delivery_date_limited_friday }}';

        // Provide warning regarding surcharge, if Saturday delivery is selected
        if (dayOfWeek == 6) {
          return [true, 'day-warning', warningTooltip];
        }

        else {
          return [(dayOfWeek != 0 && dayOfWeek != 1 && holidays.indexOf(dateString) == -1)];
        }

      }
    });
    // Supress keyboard for datepicker on mobile
    /*
    $('#delivery_date').on('click', function(e) {
      document.activeElement.blur();
    });
    */
    $('#delivery_date').change(function() {
      var selectedDay           = $('#delivery_day').val();

      // Show $20 surcharge warning is Saturday is selected
      if (selectedDay.toLowerCase().indexOf('saturday') > -1) {
        $('.delivery-date div.day-warning').show();
      }
      else {
        $('.delivery-date div.day-warning').hide();
      }

      if ($(this).val().length > 0) {
        // Remove validation treatments if value is available
        $('label[for="date"]').css('color', 'rgb(51, 51, 51)');
        $('#delivery_date').css('border-color', 'rgb(229, 229, 229');
      }

    });

    $('form.cart.table-wrap').on('submit', function(e) {
      e.preventDefault();

      var
        clickedButton           = $(this).find('input[type=submit]:focus'),
        // Using native JS selector for iOS processing
        checkoutButtonMobile    = document.getElementById('CheckoutButtonMobile'),
        errorColor              = 'rgb(208, 46, 46)',   // #d02e2e
        isDeliveryDateSelected  = ($('#delivery_date').val().length > 0);

        alert('clickedButton: ' + $(clickedButton));
        alert('clickedButton: ' + $(clickedButton).attr('name'));
        alert('clickedButton: ' + $(clickedButton).prop('name'));

      //document.getElementById('mydiv').getAttribute( 'data-mine' )

      if ($(clickedButton).attr('name') === 'checkout') {

        // If delivery date is not selected, provide validation/error handling
        if (!isDeliveryDateSelected) {
          $('label[for="date"]').css('color', errorColor);
          $('#delivery_date').css('border-color', errorColor);
          return false;
        }
        // If delivery date is available, continue the submission
        else {

          // Add selected delivery date and day to first line item
          var
            itemQuantity        = CartJS.cart.items[0].quantity,
            itemProperties      = CartJS.cart.items[0].properties;

          itemProperties._delivery_date = $('#delivery_date').val();
          itemProperties._delivery_day  = $('#delivery_day').val();

          CartJS.updateItem(1, itemQuantity, itemProperties);

          // Submit form
          $(this).off('submit').submit();

        }

      }
      else {
        // Submit update form
        $(this).off('submit').submit();
      }

    });

  });
</script>